from random import shuffle
from cs1graphics import *

img_path = "./images/"

suit_names = ('Clubs', 'Diamonds', 'Hearts', 'Spades')
face_names = ('Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King')
value = (11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10)

bj_board = Canvas(600,400,'dark green','Blackjack')

class Card:
  def string(self):
    if self.face in ("Ace", "8"):
      return "an " + self.face + " of " + self.suit
    return "a " + self.face + " of " + self.suit  

def create_deck():
  ###############################################################
  # Create a list("deck") of all 52 cards, shuffle them and return the list.
  # The list 'deck' have to include Card objects
  # A Card is represented by a object with five attributes: suit, face, value, image, and hidden
  # You should declare those five attributes to define class 'Card'   
  ###############################################################
  deck = []
  for suit in suit_names:
    for i in range(len(face_names)): #0~12
      card = Card()
      card.suit = suit
      card.face = face_names[i]
      card.value = value[i]
      card.image = Image(img_path + suit + "_" + face_names[i] + ".png")
      card.hidden = False
      deck.append(card)
  shuffle(deck)
  return deck
    
def hand_value(hand):
  ###############################################################
  # hand is a list including card objects
  # Return the value of the cards in the list "hand"   
  ###############################################################
  sum = 0
  for i in hand:
    sum += i.value
  return sum

"""
def card_string(card):
  ###############################################################
  # Parameter "card" is a Card object
  # Return a nice string to represent a card
  # (sucn as "King of Spades" or "Ace of Diamonds")
  ###############################################################
  if card.face in ("Ace", "8"):
    return "an " + card.face + " of " + card.suit
  return "a " + card.face + " of " + card.suit
"""
    
def ask_yesno(prompt):
  ###############################################################
  # Display the text prompt and let's the user enter a string.
  # If the user enters "y", the function returns "True",
  # and if the user enters "n", the function returns "False"
  # If the user enters anything else, the function prints "I beg your pardon!",
  # and asks again, repreting this until the user has entered a correct string.
  ###############################################################
  while True:
    answer = input(prompt)
    if answer == "y":
      return True
    elif answer == "n":
      return False
    else:
      print("I beg your pardon")

def draw_card(dealer, player):
  ###############################################################
  # This funuction add the cards of dealer and player to canvas, bj_board
  # In Blackjack, the first card of dealer is hidden.
  # If the attribute 'hidden' of each Card object is true,
  # then you have to show the hidden card image(Back.png).
  # The parameter dealer and player are List objects including Card Objects
  # The start position of dealer's card is (100,100)
  # The start position of player's card is (100,300)
  # You can use the following methods for positioning images and text:
  # Image() Object, Text() Object, moveTo() method, setDepth() method
  ###############################################################
  
  bj_board.clear()

  depth = 100
  x0, y0 = 100, 100 #dealer의 첫번째 카드의 좌상단 좌표
  x1, y1 = 100, 300 #player의 첫번째 카드의 좌상단 좌표
  ishidden = False

  for card in dealer:
    if card.hidden:
      ishidden = True
      BackImg = Image(img_path + "Back.png")
      BackImg.moveTo(x0, y0)
      bj_board.add(BackImg)
    else:
      card.image.moveTo(x0, y0)
      bj_board.add(card.image)
    x0 += 20
    
  if ishidden == False:
    DealerTotal = Text("The dealer's Total: " + str(hand_value(dealer)), 12)
    DealerTotal.setFontColor("white")
    DealerTotal.moveTo(400, 100)
    bj_board.add(DealerTotal)    
      
  for card in player:
    card.image.moveTo(x1, y1)
    bj_board.add(card.image)
    x1 += 20
  
  YourTotal = Text("Your Total: " + str(hand_value(player)), 12)
  YourTotal.setFontColor("white")
  YourTotal.moveTo(400, 300)
  bj_board.add(YourTotal)

###############################################
# DO NOT MODIFY THE FOLLOWING CODES
###############################################
def main():
  deck = []

  while True:    
    print ("Welcome to Blackjack World!\n")
    if len(deck) < 12:
      deck = create_deck()

    # create two hands of dealer and player
    dealer = []
    player = []

    # initial two dealings
    card = deck.pop()
    print ("You are dealt " + card.string())
    player.append(card)

    card = deck.pop()
    print ("Dealer is dealt a hidden card\n")
    card.hidden = True
    dealer.append(card)

    card = deck.pop()
    print ("You are dealt " + card.string())
    player.append(card)

    card = deck.pop()
    print ("Dealer is dealt " + card.string() + "\n")
    dealer.append(card)

    print ("Your total is", hand_value(player), "\n")
    draw_card(dealer,player)


    # player's turn to draw cards
    while hand_value(player) < 21 and ask_yesno("Would you like another card? (y/n) "):
      # draw a card for the player
      card = deck.pop()
      print ("You are dealt " + card.string())
      player.append(card)
      print ("Your total is", hand_value(player), "\n")
  
      draw_card(dealer,player)
    # if the player's score is over 21, the player loses immediately.     
    if hand_value(player) > 21:
      print ("You went over 21! You lost.")
      dealer[0].hidden = False
      draw_card(dealer,player)
    else:
    # draw cards for the dealer while the dealer's score is less than 17
      print ("The dealer's hidden card was " + dealer[0].string())
      while hand_value(dealer) < 17:
          card = deck.pop()
          print ("Dealer is dealt " + card.string())
          dealer.append(card)
          print ("The dealer's total is", hand_value(dealer), "\n")
  
      dealer[0].hidden = False
      draw_card(dealer,player)
      # summary        
      player_total = hand_value(player)
      dealer_total = hand_value(dealer)
      print ("Your total is", player_total)
      print ("The dealer's total is", dealer_total)
  
      if dealer_total > 21:
        print ("The dealer went over 21! You win!")
      else:
        if player_total > dealer_total:
          print ("You win!")
        elif player_total < dealer_total:
          print ("You lost!")
        else:
          print ("You have a tie!")
        
    if not ask_yesno("Play another round? (y/n) "):
      bj_board.close()
      break

main()
